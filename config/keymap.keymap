#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&none  &none      &none     &none     &none  &none                                      &none        &none  &none      &none     &none       &none
&none  &kp Q      &kp W     &kp E     &kp R  &kp T                                      &kp Y        &kp U  &kp I      &kp O     &kp P       &none
&none  &kp A      &kp S     &kp D     &kp F  &kp G      &none           &none           &kp H        &kp J  &kp K      &kp L     &kp SEMI    &none
&none  &kp Z      &kp X     &kp C     &kp V  &kp B      &kp LANGUAGE_1  &kp LANGUAGE_2  &kp N        &kp M  &kp COMMA  &kp DOT   &kp FSLH    &none
&none  &kp LCTRL  &kp LGUI  &kp LALT  &mo 1  &kp SPACE  &mo 3           &kp BSPC        &lt 2 ENTER  &none  &none      &kp RALT  &kp RSHIFT  &none
            >;
        };

        layer_1 {
            bindings = <
&none  &none   &none    &none    &none    &none                   &none    &none      &none      &none      &none   &none
&none  &kp F1  &kp F2   &kp F3   &kp F4   &trans                  &trans   &trans     &trans     &trans     &trans  &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &trans  &none   &none   &trans   &mkp LCLK  &kp PG_UP  &mkp RCLK  &trans  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans   &trans     &kp PG_DN  &mkp MCLK  &trans  &none
&none  &trans  &trans   &trans   &trans   &trans  &trans  &trans  &kp TAB  &trans     &trans     &trans     &trans  &none
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans            &trans            &trans      &trans      &trans                      &trans          &trans         &trans            &trans             &trans         &trans
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                  &kp LS(N6)      &kp LS(N7)     &kp LS(N8)        &kp LS(N9)         &kp LS(N0)     &trans
&trans  &kp N1            &kp N2            &kp N3      &kp N4      &kp N5      &trans  &trans  &kp LEFT_BRACE  &kp MINUS      &kp EQUAL         &kp RIGHT_BRACE    &kp COLON      &trans
&trans  &kp N6            &kp N7            &kp N8      &kp N9      &kp N0      &trans  &trans  &kp LS(MINUS)   &kp LS(EQUAL)  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &trans
&trans  &trans            &trans            &trans      &trans      &trans      &trans  &trans  &kp TAB         &kp DEL        &trans            &trans             &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans   &trans   &trans        &trans        &trans                      &trans            &trans     &trans         &trans     &trans      &trans
&trans  &kp F1   &kp F2   &kp F3        &kp F4        &kp F5                      &kp HOME          &kp PG_UP  &kp PAGE_DOWN  &kp END    &kp ESCAPE  &trans
&trans  &kp F6   &kp F7   &kp F8        &kp F9        &kp F10     &trans  &trans  &kp LEFT          &kp DOWN   &kp UP_ARROW   &kp RIGHT  &kp TAB     &trans
&trans  &kp F11  &kp F12  &out OUT_USB  &out OUT_BLE  &bt BT_NXT  &trans  &trans  &kp SINGLE_QUOTE  &kp DQT    &kp GRAVE      &kp TILDE  &kp PIPE    &trans
&trans  &trans   &trans   &trans        &kp DELETE    &kp TAB     &trans  &trans  &trans            &trans     &trans         &trans     &trans      &trans
            >;
        };
    };
};
